# -*- coding: utf-8 -*-
"""Untitled12.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oDUp2S_qiy12-6e5tpLVgwzs1Tm_TZNb
"""

import numpy
import pandas as pd
import numpy as np
from sklearn.metrics import confusion_matrix
from sklearn.model_selection import train_test_split
import matplotlib.pyplot as plt
from sklearn.ensemble import ExtraTreesClassifier
from sklearn.preprocessing import LabelEncoder
from keras.models import Sequential
from keras.layers import Dense, Dropout, Flatten, BatchNormalization, Activation
from keras.layers.convolutional import Conv2D, MaxPooling2D
from keras.callbacks import EarlyStopping,Callback
from time import time
from sklearn import metrics
import pickle

!gdown --id 1-0qLhB5hwmnG2jbcZV3zUWO0sQWpgNlU
!gdown --id 1Yvnu3bacyohaa8OQMDcDE73j04OiSJHX

df_Data =  pd.DataFrame()
for data in pd.read_csv("/content/FFeature.csv",header=None,chunksize=10000):
  df_Data =  pd.DataFrame(df_Data.append(data))

Y_Data_Final =  pd.DataFrame()
for data in pd.read_csv("/content/Label.csv",header=None,chunksize=10000):
  Y_Data_Final =  pd.DataFrame(Y_Data_Final.append(data))

Y_Data_Final=Y_Data_Final.drop(0,axis=1)

def reduce_size(data):
  for col in data.columns:
    data[col] = data[col].astype(np.uint8)
  return data
def y_labels(data):
    dict={'Adware':0,'Banker':1 , 'FileInfector':2,'PUA':3,'Riskware':4,'SMS':5,'Trojan':6,'Backdoor':7,'Dropper':8,'NoCategory':9,'Ransomware':10, 'Scareware':11 ,'Spy':12 ,'Zeroday':13,'Benign':14}
    for key, value in dict.items():
      data[data[9505]==key]=value
    return data

df_Data=reduce_size(df_Data)

Y_Data_Final=reduce_size(Y_Data_Final)

X_train, X_test, Y_train, Y_test = train_test_split(df_Data, Y_Data_Final, test_size=0.20, random_state=50)

model = Sequential()

model.add(Dense(units = 6, kernel_initializer = 'uniform', activation = 'relu', input_shape =( 1346,)))
model.add(Dense(units = 6, kernel_initializer = 'uniform', activation = 'relu'))
model.add(Dense(units = 1, kernel_initializer = 'uniform', activation = 'sigmoid'))

model.summary()

model.compile(loss='categorical_crossentropy', optimizer="Adam", metrics=['accuracy'])

model.fit(X_train,Y_train,epochs=6,validation_split=0.15)

y_pred=model.predict(X_test)

Y_PRED_data=[]
for i in y_pred:
  Y_PRED_data.append(int(str(i[0]).split(".")[0]))

y=pd.DataFrame(Y_PRED_data)

y.value_counts()

from sklearn import metrics

print(metrics.accuracy_score(Y_test,y))