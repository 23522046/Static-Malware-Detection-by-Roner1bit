import pandas as pd
import numpy as np
from sklearn.metrics import confusion_matrix
from sklearn.model_selection import train_test_split
import matplotlib.pyplot as plt
import xgboost as xgb
from xgboost import XGBClassifier
import pickle




if __name__ == "__main__": 
    X_Data=pd.read_csv(r'F:\downloads\my summer\Features.csv',dtype=np.uint16)
    y_data=pd.read_csv(r'F:\downloads\my summer\Label.csv',dtype=np.uint16)
    y_data=y_data.iloc[: , 1:]
    X_Data= X_Data.iloc[: , 1:]
    X_train, X_test, y_train, y_test = train_test_split(X_Data, y_data, train_size=0.9, test_size=0.04, random_state=101)
    clf =  XGBClassifier(objective='multi:softmax')
    #%%
    del X_Data
    del y_data
    
    #%%
    clf.fit(X_train,y_train,verbose=True)
    
    #%%
    with open(r'F:\downloads\my summer\XGBOOST_pkl', 'wb') as files:
        pickle.dump(clf, files)
    #%%
    from sklearn.metrics import confusion_matrix
    
    print(clf.score(X_test,y_test))
    
    #%%
    clf2 =  XGBClassifier(objective='multi:softmax',verbosity=3,max_depth=20)
    clf2.fit(X_train,y_train)
    #%%
    print(clf2.score(X_test,y_test))
    #%%
   
    #%%
    with open(r'F:\downloads\my summer\XGBOOST_estimators=50_maxdepth=20_pkl', 'wb') as files:
        pickle.dump(clf2, files)
    #%%
    clf2_score=clf2.score(X_test,y_test)
    
    #%%
    clf3 =  XGBClassifier(objective='multi:softmax',verbosity=3,max_depth=25,n_estimators=100)
    clf3.fit(X_train,y_train)
    #%%
    clf3_score=clf3.score(X_test,y_test)
    #%%
    with open(r'F:\downloads\my summer\XGBOOST_estimators=100_maxdepth=25_pkl', 'wb') as files:
        pickle.dump(clf3, files)
    
    #%%
    clf4 =  XGBClassifier(objective='multi:softmax',verbosity=3,max_depth=30,n_estimators=100)
    clf4.fit(X_train,y_train)
    #%%
    clf4_score=clf4.score(X_test,y_test)
    #%%
    with open(r'F:\downloads\my summer\XGBOOST_estimators=100_maxdepth=30_pkl', 'wb') as files:
        pickle.dump(clf4, files)
    
    #%%
    clf5 =  XGBClassifier(objective='multi:softmax',verbosity=3,max_depth=35,n_estimators=100)
    clf5.fit(X_train,y_train)
    #%%
    clf5_score=clf5.score(X_test,y_test)
    #%%
    with open(r'F:\downloads\my summer\XGBOOST_estimators=100_maxdepth=35_pkl', 'wb') as files:
        pickle.dump(clf5, files)
   #%%
         
    
        
        